<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.herd</groupId>
	<artifactId>herd</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Herd</name>

	<properties>
		<java.compiler.version>1.8</java.compiler.version>
		<java.compiler.encoding>utf-8</java.compiler.encoding>

		<disruptor.version>3.3.0</disruptor.version>
		<guava.version>15.0</guava.version>
		<guice.version>3.0</guice.version>
		<jackson.version>2.3.2</jackson.version>
		<javax-validation.version>1.1.0.Final</javax-validation.version>
		<log4j.version>2.0.2</log4j.version>
		<netty.version>4.0.19.Final</netty.version>
		<scala.version>2.10.4</scala.version>
		<scala.runtime>2.10</scala.runtime>
		<slf4j.version>1.7.7</slf4j.version>
		<snakeyaml.version>1.13</snakeyaml.version>

		<!-- plugin version -->
		<jacoco.plugin.version>0.7.1.201405082137</jacoco.plugin.version>
		<scala.maven.plugin.version>3.1.7-SNAPSHOT</scala.maven.plugin.version>

		<!-- test stuff -->
		<junit.version>4.11</junit.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${java.compiler.version}</source>
					<target>${java.compiler.version}</target>
					<testTarget>${java.compiler.version}</testTarget>
					<encoding>${java.compiler.encoding}</encoding>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>${scala.maven.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.plugin.version}</version>
					<executions>
						<execution>
							<id>default-prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>default-report</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
						<execution>
							<id>default-check</id>
							<goals>
								<goal>check</goal>
							</goals>
							<configuration>
								<rules>
									<rule>
										<element>BUNDLE</element>
										<limits>
											<limit>
												<counter>INSTRUCTION</counter>
												<value>COVEREDRATIO</value>
												<minimum>0.80</minimum>
											</limit>
											<limit>
												<counter>LINE</counter>
												<value>COVEREDRATIO</value>
												<minimum>0.80</minimum>
											</limit>
											<limit>
												<counter>BRANCH</counter>
												<value>COVEREDRATIO</value>
												<minimum>0.80</minimum>
											</limit>
											<limit>
												<counter>COMPLEXITY</counter>
												<value>COVEREDRATIO</value>
												<minimum>0.80</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<modules>
		<module>herd-core</module>
		<module>herd-example</module>
		<module>herd-example-scala</module>
		<module>herd-fcq</module>
		<module>herd-http</module>
		<module>herd-thrift</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<!-- herd modules -->
			<dependency>
				<groupId>io.herd</groupId>
				<artifactId>herd-core</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>io.herd</groupId>
				<artifactId>herd-core</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>io.herd</groupId>
				<artifactId>herd-http</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>io.herd</groupId>
				<artifactId>herd-thrift</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-all</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>com.lmax</groupId>
				<artifactId>disruptor</artifactId>
				<version>${disruptor.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.module</groupId>
				<artifactId>jackson-module-afterburner</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-yaml</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${javax-validation.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject</groupId>
				<artifactId>guice</artifactId>
				<version>${guice.version}</version>
			</dependency>

			<dependency>
				<groupId>org.yaml</groupId>
				<artifactId>snakeyaml</artifactId>
				<version>${snakeyaml.version}</version>
			</dependency>

			<!-- Scala dependencies -->
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-library</artifactId>
				<version>${scala.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-compiler</artifactId>
				<version>${scala.version}</version>
			</dependency>

			<!-- Logging dependencies -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-slf4j-impl</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<!-- log4j2 as the logging implementation -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j.version}</version>
			</dependency>

			<!-- Test dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

</project>
